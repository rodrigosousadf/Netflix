name: Build, Scan, and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build:
    name: build-analyze-scan  
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better relevance of analysis

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get remove containerd -y
          sudo apt-get install -y containerd.io
          sudo usermod -aG docker $USER

      - name: Verify Docker installation
        run: docker --version

      - name: Install Trivy
        run: |
          sudo apt-get install wget apt-transport-https gnupg lsb-release -y
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg > /dev/null
          echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy -y
          trivy --version

      - name: Run Dependency Check
        run: |
          wget https://github.com/jeremylong/DependencyCheck/releases/download/v7.1.0/dependency-check-7.1.0-release.zip
          unzip dependency-check-7.1.0-release.zip
          cd dependency-check/bin
          mkdir -p ${{ github.workspace }}/dependency-check-results
          ./dependency-check.sh --project "Netflix" --scan ${{ github.workspace }} --format "ALL" --out ${{ github.workspace }}/dependency-check-results

      - name: Upload Dependency Check results
        uses: actions/upload-artifact@v2
        with:
          name: dependency-check-report
          path: ${{ github.workspace }}/dependency-check-results

      - name: Docker build
        run: |
          docker build --build-arg TMDB_V3_API_KEY=7e8c3da0462a1bef004e78d2cafd71aa -t netflix .
        
      - name: Trivy scan
        run: |
          trivy --no-progress netflix
          trivy_exit_code=$?
          if [ $trivy_exit_code -ne 0 ]; then
            echo "Trivy found vulnerabilities. Exiting with code $trivy_exit_code."
            exit $trivy_exit_code
          else
            echo "Trivy scan passed with no vulnerabilities."
          fi




      - name: Docker tag and push
        run: |
          docker tag netflix rodrigosousadf/netflix:latest
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
          docker push rodrigosousadf/netflix:latest
        env:
          DOCKER_CLI_ACI: 1


  #deploy:
    #needs: build
    #runs-on: [aws-netflix]  # use your label here
    #steps:
      #- name: Pull the docker image
        #run: docker pull rodrigosousadf/netflix:latest

     # - name: Install Trivy
        #run: |
          #if ! command -v trivy &> /dev/null; then
              #wget https://github.com/aquasecurity/trivy/releases/download/v0.18.3/trivy_0.18.3_Linux-64bit.tar.gz
              #wget https://github.com/aquasecurity/trivy/releases/download/v0.18.3/trivy_0.18.3_Linux-64bit.tar.gz
              #sudo mv trivy /usr/local/bin/
          #fi
          #trivy --version

      #- name: Trivy image scan
        #run: trivy image rodrigosousadf/netflix:latest

      #- name: Run the container netflix
        #run: |
          # Remover o contêiner se ele já existir
          #docker rm -f netflix || true
          # Iniciar o novo contêiner
          #docker run -d --name netflix -p 8081:3000 rodrigosousadf/netflix:latest
          # Aguarde 10 segundos para garantir que o contêiner tenha tempo para iniciar
          #sleep 10
